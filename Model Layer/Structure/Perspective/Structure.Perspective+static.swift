//
//  Structure.Perspective+static.swift
//  Hippocampus
//
//  Created by Guido KÃ¼hn on 19.06.24.
//  Generated by Hippocampus on 03.08.2024 03:33.
//

import Foundation
import SwiftUI
import Grisu

extension Structure.Perspective {
    typealias Perspective = Structure.Perspective
    typealias Aspect = Structure.Aspect
    typealias Particle = Structure.Particle

	static var statics: [Perspective] { [Statics.drawing, Statics.hierarchical, Statics.named, Statics.note, Statics.text, Statics.topic, Statics.tracked] }

	enum Statics {
		static var same: Perspective {
			let perspective = Perspective(id: "00000000-0000-0000-0000-000000000001".uuid)
			perspective.name = "same"
			return perspective
		}

		static var drawing: Perspective {
			let perspective = Perspective(id: "8ECEA3AE-1E0B-4DDD-BABE-5836C577FE08".uuid)
			perspective.name = "Drawing"
			perspective.aspects = [
				{
					let aspect = Aspect(id: "F5DC22EC-A54E-428E-8C2A-99A543521AA5".uuid)
					aspect.name = "drawing"
					aspect.kind = .drawing
					return aspect
				}()
			]
			return perspective
		}

		static var hierarchical: Perspective {
			let perspective = Perspective(id: "B6D7755C-210C-484D-B79B-ACD931D581C9".uuid)
			perspective.name = "Hierarchical"
			perspective.perspectives = [named]
			perspective.references = [same]
			perspective.representations = [
				{
					let representation = Representation(id: "AE043B77-C4F7-454C-A530-5D8BECFAFC80".uuid)
					representation.name = ""
					representation.layouts = []
					representation.presentation = .background([
					.horizontal([
						.color([
							.aspect("6247260E-624C-48A1-985C-CDEDDFA5D3AD".uuid /*Named.Name*/, appearance: .normal), 
							.label("Hallo")
						], color: Color(hex: "8F0F8F")), 
						.label("Welt")
					], alignment: .center)
				], color: Color(hex: "F5F28F"))
					return representation
				}(),
				{
					let representation = Representation(id: "7D49DC1F-AC7E-45B6-97D4-BE37093018F3".uuid)
					representation.name = ""
					representation.layouts = [.tree,.list]
					representation.presentation = .horizontal([
					.color([
						.icon("bookmark.fill")
					], color: Color(hex: "6080FF")), 
					.aspect("6247260E-624C-48A1-985C-CDEDDFA5D3AD".uuid /*Named.Name*/, appearance: .normal)
				], alignment: .center)
					return representation
				}()
				]
			return perspective
		}

		static var named: Perspective {
			let perspective = Perspective(id: "8A81358C-2A7C-497D-A93D-306F776C217C".uuid)
			perspective.name = "Named"
			perspective.aspects = [
				{
					let aspect = Aspect(id: "6247260E-624C-48A1-985C-CDEDDFA5D3AD".uuid)
					aspect.name = "Name"
					aspect.kind = .text
					return aspect
				}()
			]
			perspective.representations = [
				{
					let representation = Representation(id: "7B8DDE7F-F331-41C9-BD64-B097E2050A1D".uuid)
					representation.name = ""
					representation.layouts = [.list,.tree]
					representation.presentation = .horizontal([
					.color([
						.aspect("6247260E-624C-48A1-985C-CDEDDFA5D3AD".uuid /*Named.Name*/, appearance: .icon)
					], color: Color(hex: "FF0019")), 
					.aspect("6247260E-624C-48A1-985C-CDEDDFA5D3AD".uuid /*Named.Name*/, appearance: .normal)
				], alignment: .center)
					return representation
				}()
				]
			return perspective
		}

		static var note: Perspective {
			let perspective = Perspective(id: "8AB172CF-2330-4861-B551-8728BA6062BF".uuid)
			perspective.name = "Note"
			perspective.perspectives = [named, tracked, text, drawing]
			return perspective
		}

		static var text: Perspective {
			let perspective = Perspective(id: "73874A60-423C-4128-9A5A-708D4350FEF3".uuid)
			perspective.name = "Text"
			perspective.aspects = [
				{
					let aspect = Aspect(id: "F0C2B7D0-E71A-4296-9190-8EF2D540338F".uuid)
					aspect.name = "Text"
					aspect.kind = .text
					return aspect
				}()
			]
			return perspective
		}

		static var topic: Perspective {
			let perspective = Perspective(id: "3B681E4A-C42A-48D5-92E2-93F4B5C7CDD0".uuid)
			perspective.name = "Topic"
			perspective.perspectives = [hierarchical, named, tracked]
			perspective.references = [note]
			perspective.aspects = [
				{
					let aspect = Aspect(id: "B945443A-32D6-4FE7-A63F-65436CAAA3CA".uuid)
					aspect.name = "Titel"
					aspect.kind = .text
					return aspect
				}()
			]
			return perspective
		}

		static var tracked: Perspective {
			let perspective = Perspective(id: "D7812874-085B-4161-9ABB-C82D4A145634".uuid)
			perspective.name = "Tracked"
			perspective.aspects = [
				{
					let aspect = Aspect(id: "E851210E-7CCC-4D09-87C1-A7E75E04D7F4".uuid)
					aspect.name = "created"
					aspect.kind = .date
					return aspect
				}()
			]
			perspective.particles = [
				{
					let particle = Particle(id: "00000000-0000-0000-0000-000500000000".uuid)
					particle.name = "whatever"
					return particle
				}()
			]
			return perspective
		}
	}
}
